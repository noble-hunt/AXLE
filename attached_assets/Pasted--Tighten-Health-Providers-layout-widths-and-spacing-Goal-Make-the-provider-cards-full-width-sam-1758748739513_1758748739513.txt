“Tighten Health Providers layout, widths, and spacing”

Goal
Make the provider cards full-width (same left/right edges as the top stat tiles), stack the action buttons, fix heading sizes, and vertically center the Development Mode row text.

1) Find files

Search for the Health Providers page and card components (names may vary):

client/src/pages/health.tsx or client/src/pages/health/providers.tsx

client/src/components/health/ProviderCard.tsx (or wherever provider cards render)

The small stat tiles (“Connected”, “Available”)—keep their container paddings as a reference.

2) Create/ensure shared section wrappers (consistent gutters)

Create client/src/components/layout/Section.tsx:

import React from "react";

type Props = React.PropsWithChildren<{
  className?: string;
}>;

export default function Section({ children, className }: Props) {
  // These paddings must match stat tiles container paddings so edges align
  return (
    <div className={`w-full px-5 sm:px-6 ${className ?? ""}`}>
      {children}
    </div>
  );
}


Use this wrapper for:

The “Connect Health Providers” header + stat tiles container

The “Development Mode” row

The “Health Providers” list

3) Unify headings (size/weight/spacing)

Create client/src/components/typography/Heading.tsx:

export function PageTitle({ children }: { children: React.ReactNode }) {
  return <h1 className="text-3xl font-bold tracking-tight text-white mb-4">{children}</h1>;
}

export function SectionTitle({ children }: { children: React.ReactNode }) {
  // Match the size of PageTitle as requested
  return <h2 className="text-3xl font-bold tracking-tight text-white mb-4">{children}</h2>;
}


Replace existing headings:

“Connect Health Providers” → <PageTitle>

“Health Providers” → also <SectionTitle> (same size as page title per request)

4) Development Mode row: vertically center label + switch

In the page file, wrap the dev row in Section, and make it a fixed-height, centered container:

<Section className="mt-2">
  <div className="rounded-2xl bg-[#1d1f24] px-5 h-14 flex items-center justify-between shadow">
    <div className="flex items-center gap-3">
      <span className="i-lucide-settings h-5 w-5 opacity-80" />
      <span className="text-base font-medium text-white">Development Mode</span>
    </div>
    {/* your switch component */}
    <DevModeSwitch />
  </div>
</Section>


This guarantees text is visually centered, not riding high.

5) Provider Card — full-width, aligned edges, stacked actions

Refactor the provider card to a two-column layout that fits within the exact same horizontal paddings as the stat tiles. Create/update client/src/components/health/ProviderCard.tsx:

import React from "react";

type ProviderCardProps = {
  name: string;
  description?: string;
  status: "connected" | "disconnected" | "unavailable";
  lastSyncText?: string;       // e.g. "Last sync: 1:42 PM"
  onConnect?: () => void;
  onSync?: () => void;
  onDisconnect?: () => void;
};

export default function ProviderCard({
  name,
  description,
  status,
  lastSyncText,
  onConnect,
  onSync,
  onDisconnect,
}: ProviderCardProps) {
  const isConnected = status === "connected";
  const isUnavailable = status === "unavailable";

  return (
    <div className="w-full rounded-2xl bg-[#1d1f24] shadow px-5 py-4">
      <div className="flex items-start justify-between gap-4">
        {/* LEFT: text/status */}
        <div className="min-w-0 flex-1">
          <div className="flex items-center gap-2">
            <span
              className={[
                "inline-block h-2 w-2 rounded-full",
                isConnected ? "bg-emerald-400" : isUnavailable ? "bg-zinc-500" : "bg-zinc-400",
              ].join(" ")}
            />
            <span className="text-base font-semibold text-white truncate">{name}</span>
          </div>

          {description ? (
            <p className="text-sm text-zinc-300 mt-1">{description}</p>
          ) : null}

          {isConnected && lastSyncText ? (
            <p className="text-xs text-zinc-400 mt-2">{lastSyncText}</p>
          ) : null}

          {!isConnected && !isUnavailable ? (
            <p className="text-sm text-zinc-400 mt-2">Disconnected</p>
          ) : null}

          {isUnavailable ? (
            <div className="mt-2 inline-flex px-2 py-0.5 text-xs rounded-full bg-white/90 text-zinc-900">
              Unavailable
            </div>
          ) : null}
        </div>

        {/* RIGHT: actions (stacked) */}
        <div className="flex flex-col items-stretch gap-2 shrink-0 w-36">
          {isConnected ? (
            <>
              <button
                className="h-9 rounded-xl bg-[#3267ff] text-white text-sm font-medium"
                onClick={onSync}
              >
                Sync Now
              </button>
              <button
                className="h-9 rounded-xl bg-[#e23d36] text-white text-sm font-medium"
                onClick={onDisconnect}
              >
                Disconnect
              </button>
            </>
          ) : isUnavailable ? (
            <button
              className="h-9 rounded-xl bg-zinc-700 text-zinc-300 text-sm font-medium cursor-not-allowed"
              disabled
            >
              Connect
            </button>
          ) : (
            <button
              className="h-9 rounded-xl bg-[#3267ff] text-white text-sm font-medium"
              onClick={onConnect}
            >
              Connect
            </button>
          )}
        </div>
      </div>
    </div>
  );
}

6) Page: render provider list in a vertical stack (aligned to stat tiles)

In the page component:

<Section className="mt-6">
  <SectionTitle>Health Providers</SectionTitle>

  <div className="flex flex-col gap-3">
    {/* One ProviderCard per provider; widths now auto-match Section paddings */}
    <ProviderCard
      name="Mock Provider"
      description="Development testing provider"
      status={isMockConnected ? "connected" : "disconnected"}
      lastSyncText={isMockConnected ? `Last sync: ${lastSyncText}` : undefined}
      onSync={syncMock}
      onDisconnect={disconnectMock}
      onConnect={connectMock}
    />

    <ProviderCard
      name="Fitbit"
      description="Fitbit wearable devices"
      status={fitbitAvailable ? "disconnected" : "unavailable"}
      onConnect={fitbitAvailable ? connectFitbit : undefined}
    />

    <ProviderCard
      name="WHOOP 4.0"
      description="WHOOP fitness tracker"
      status={whoopAvailable ? "disconnected" : "unavailable"}
      onConnect={whoopAvailable ? connectWhoop : undefined}
    />

    <ProviderCard
      name="Oura Ring"
      description="Oura ring health tracker"
      status={ouraAvailable ? "disconnected" : "unavailable"}
      onConnect={ouraAvailable ? connectOura : undefined}
    />

    <ProviderCard
      name="Garmin Connect"
      description="Garmin wearable devices"
      status={garminAvailable ? "disconnected" : "unavailable"}
      onConnect={garminAvailable ? connectGarmin : undefined}
    />
  </div>
</Section>


We switched to a single-column vertical stack of full-width cards. This ensures left/right edges line up with the stat tiles and eliminates the pinched/narrow look. (If you want a responsive two-column on tablets later, we can add that with md:grid-cols-2, but mobile stays single column.)

7) Tighten stat tiles container so edges match provider cards

Wrap the tiles in the same Section:

<Section>
  <PageTitle>Connect Health Providers</PageTitle>
  <div className="grid grid-cols-2 gap-4">
    {/* Connected tile */}
    <div className="rounded-2xl bg-[#1d1f24] px-5 py-6 shadow">
      {/* ...content... */}
    </div>

    {/* Available tile */}
    <div className="rounded-2xl bg-[#1d1f24] px-5 py-6 shadow">
      {/* ...content... */}
    </div>
  </div>
</Section>

8) Spacing rules (consistency)

Vertical rhythm between major blocks: mt-6

Within cards: px-5 py-4, inner gaps: gap-2

Text sizes: title text-base font-semibold, body text-sm, meta text-xs

Buttons: h-9 text-sm rounded-xl, stacked with gap-2, fixed w-36 to prevent wrap

9) Light refactor—remove old grid that pinched cards

Delete/replace any old grid grid-cols-2 provider layout that caused narrow cards. Ensure no additional horizontal padding is set outside Section, so the card edges align with the tiles.

10) Accessibility & touch targets

Buttons ≥ 36px height (we used h-9 = 36px).

Status dot has aria-hidden="true" (optional).

Card clickable areas stay explicit (don’t make entire card a button).

Acceptance Criteria

Provider cards exactly align with the left/right edges of the top stat tiles on mobile (same px gutter).

Each provider card is full width; no pinched/narrow columns.

Sync Now and Disconnect are smaller and stacked vertically on the right, inside the card, without overflow or overlap.

For disconnected/unavailable providers, the status text and the Connect button are stacked vertically; Unavailable is clearly labeled with a pill.

The “Health Providers” heading matches the size/weight of “Connect Health Providers”.

The Development Mode row’s text is perfectly vertically centered relative to the switch.

All text and controls have consistent spacing:

Headings mb-4, sections mt-6, card inner px-5 py-4, action column w-36 gap-2.

No horizontal scrolling; no clipped text; buttons never overlap other elements on iOS Safari or Chrome Android.