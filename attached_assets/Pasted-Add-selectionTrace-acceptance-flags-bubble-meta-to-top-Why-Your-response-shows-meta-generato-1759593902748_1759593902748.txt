Add selectionTrace + acceptance flags (+ bubble meta to top)

Why: Your response shows meta.generator/style but not which registry IDs were chosen or whether the workout passed style checks. We’ll attach:

workout.meta.selectionTrace: each block with each item’s registry_id.

workout.meta.acceptance: style_ok, time_fit, has_warmup, has_cooldown, hardness_ok, equipment_ok, no_banned_in_mains, etc.

Also mirror workout.meta to top-level meta for convenience.

Do this exactly:

Tag items with the registry id where you map a Movement into an item (inside the premium builder when you call MovementService):

// when creating items from MovementService picks:
items.push({
  exercise: move.name,
  registry_id: move.id,            // <— add this
  scheme: {/* reps/%/rest */},
  notes: note
});


Before returning the premium workout (end of generatePremiumWorkout in server/ai/generators/premium.ts), add:

// Build acceptance flags if you don’t already
const acceptance = {
  time_fit: Math.abs(totalTimeMin - req.duration_min) <= Math.max(2, req.duration_min * 0.1),
  has_warmup: !!workout.blocks.find((b:any)=>b.kind==='warmup' && (b.time_min||0) >= 6),
  has_cooldown: !!workout.blocks.find((b:any)=>b.kind==='cooldown' && (b.time_min||0) >= 4),
  style_ok: !!PACKS[style],
  hardness_ok: workout.variety_score >= (pack.hardnessFloor || 0.75),
  equipment_ok: true, // (set false if you detect an impossible movement given equipment)
  no_banned_in_mains: mains.every((b:any)=> (b.items||[]).every((it:any)=> !it._bannedReplaced)), // if you set a marker during sanitizer
  mixed_rule_ok: workout.focus !== 'mixed' ? true : Boolean(mixedWasRespected)
};

workout.acceptance_flags = { ...(workout.acceptance_flags||{}), ...acceptance };

workout.meta = {
  ...(workout.meta||{}),
  generator: 'premium',
  style,
  goal: req.goal || req.style || style,
  title: workout.title || pack.name,
  equipment: req.equipment,
  seed,
  acceptance: workout.acceptance_flags,
  selectionTrace: workout.blocks.map((b:any)=>({
    title: b.title, kind: b.kind, time_min: b.time_min,
    items: (b.items||[]).map((it:any)=>({ name: it.exercise, id: it.registry_id || null }))
  }))
};


Bubble meta to the top-level response in server/workoutGenerator.ts (right after you’ve built result/converted to UI):

// ensure API has both top-level meta and workout.meta
result.meta = result.workout?.meta || result.meta || {};


Acceptance check (run):

curl -s http://localhost:5000/api/workouts/generate \
  -H 'Content-Type: application/json' \
  -d '{"goal":"crossfit","durationMin":45,"intensity":8,"equipment":["barbell","dumbbell","kettlebell"],"seed":"TRACE1"}' \
 | jq '.workout.meta | {generator,style,seed,acceptance,selectionTrace: .selectionTrace[0:2]}'


You should see acceptance booleans and a selectionTrace array with item ids like "snatch", "front-squat" etc.