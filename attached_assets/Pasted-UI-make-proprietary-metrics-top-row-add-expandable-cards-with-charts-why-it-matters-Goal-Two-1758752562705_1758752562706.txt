UI: make proprietary metrics top row, add expandable cards with charts + “why it matters”

Goal: Two-row grid: (1) 5 proprietary cards, (2) the 4 provider cards. Tapping any card opens a Bottom Sheet with a 14-day chart + description.

Actions

Reusable card component
File: client/src/components/health/MetricCard.tsx

import { useState } from "react";
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts";
import { cn } from "@/lib/cn";
import useAppStore from "@/state/useAppStore";

export default function MetricCard({
  keyName,
  title,
  unit,
  icon,
  colorClass = "",
  description,
}: {
  keyName: string;
  title: string;
  unit?: string;
  icon?: React.ReactNode;
  colorClass?: string;
  description: string;
}) {
  const [open, setOpen] = useState(false);
  const charts = useAppStore(s => s.charts as any);
  const series = charts?.[keyName] ?? [];

  const latest = series.length ? series[series.length - 1].value : null;

  return (
    <>
      <button
        onClick={() => setOpen(true)}
        className={cn(
          "rounded-2xl bg-[#1d1f24] px-4 py-3 text-left shadow w-full",
          "hover:bg-[#20242b] active:bg-[#1b1e24]"
        )}
      >
        <div className="flex items-center gap-3">
          {icon ?? <span className="i-lucide-activity w-5 h-5 opacity-80" />}
          <div className="flex-1">
            <div className="text-white/90 text-base font-medium">{title}</div>
            <div className="text-white/60 text-sm">
              {latest != null ? `${latest}${unit ?? ""}` : "--"}
            </div>
          </div>
          <span className={`w-2 h-2 rounded-full ${colorClass || "bg-blue-400"}`} />
        </div>
      </button>

      {open && (
        <div className="fixed inset-0 z-[60] bg-black/50" onClick={() => setOpen(false)}>
          <div
            className="absolute bottom-0 left-0 right-0 rounded-t-2xl bg-[#101215] p-4"
            onClick={(e) => e.stopPropagation()}
          >
            <div className="h-40">
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={series.map((d:any)=>({ x:d.date, y:d.value }))}>
                  <XAxis dataKey="x" hide />
                  <YAxis hide />
                  <Tooltip formatter={(v)=> v==null? "--": v} />
                  <Line type="monotone" dataKey="y" dot={false} stroke="currentColor" strokeWidth={2}
                        className={colorClass || "text-blue-400"} />
                </LineChart>
              </ResponsiveContainer>
            </div>
            <div className="mt-3 text-white/80 text-sm">{description}</div>
            <button className="mt-4 mb-1 h-11 w-full rounded-xl bg-white/10 text-white" onClick={()=>setOpen(false)}>
              Close
            </button>
          </div>
        </div>
      )}
    </>
  );
}


Health page layout
File: client/src/pages/health.tsx
Replace the “Today’s Metrics” section with two grids:

import MetricCard from "@/components/health/MetricCard";
import useAppStore from "@/state/useAppStore";
import { useEffect } from "react";

export default function HealthPage() {
  const loadHealthCharts = useAppStore(s => s.loadHealthCharts);

  useEffect(() => { loadHealthCharts(14); }, [loadHealthCharts]);

  return (
    <>
      {/* ... existing "Health Analytics" header ... */}

      <div className="px-4 sm:px-5 md:px-6 mt-4">
        <div className="text-white/90 text-lg font-semibold mb-2">Today’s Metrics</div>

        {/* Row 1: Proprietary */}
        <div className="grid grid-cols-2 gap-3">
          <MetricCard keyName="axle_health_score"       title="AXLE Health Score"        description="Your all-in score combining vitality, performance, circadian alignment and energy-system balance." colorClass="text-sky-400" />
          <MetricCard keyName="vitality_score"          title="Vitality"                 description="Daily well-being from sleep quality, activity, recovery and training intensity." colorClass="text-emerald-400" />
          <MetricCard keyName="performance_potential"   title="Performance Potential"    description="Readiness to push harder today, driven by recovery, intensity tolerance and resting HR." colorClass="text-indigo-400" />
          <MetricCard keyName="circadian_alignment"     title="Circadian Alignment"      description="How well your behaviors align with daylight: activity in sunlight, steady sleep, and small boosts from UV while avoiding high pollution." colorClass="text-amber-400" />
          <MetricCard keyName="energy_systems_balance"  title="Energy Systems"           description="How balanced your training is across alactic, lactic and aerobic energy systems over the last month." colorClass="text-pink-400" />
        </div>

        {/* Row 2: Provider core metrics */}
        <div className="grid grid-cols-2 gap-3 mt-4">
          <MetricCard keyName="hrv"           title="HRV"             unit=" ms"   description="Higher HRV generally means better recovery. Track trends over time, not single days." colorClass="text-cyan-400" />
          <MetricCard keyName="resting_hr"    title="Resting HR"      unit=" bpm"  description="Lower resting heart rate often indicates improved aerobic fitness and recovery." colorClass="text-rose-400" />
          <MetricCard keyName="sleep_score"   title="Sleep Score"     unit=""      description="Overall sleep quality from your provider. Aim for consistency plus 7–9 hours nightly." colorClass="text-purple-400" />
          <MetricCard keyName="fatigue_score" title="Fatigue Score"   unit=""      description="AXLE’s fatigue estimate from training load, sleep and recovery signals." colorClass="text-orange-400" />
        </div>
      </div>

      {/* You can keep/remove the big 14-day charts section; the per-card sheet now covers it */}
    </>
  );
}


Acceptance Criteria

Proprietary cards appear first; provider cards below.

Tapping any card opens a sheet with a 14-day line chart + a concise why it matters description.

Latest value shows on the card; -- when not available.