Prompt: Constrain metric sheet width for mobile & center on larger screens

Files to edit

client/src/components/health/MetricCard.tsx

(optional) client/src/styles/globals.css (or wherever global CSS lives)

Changes

Update the bottom-sheet markup in MetricCard.tsx:

Constrain width with max-w-[420px] sm:max-w-[480px]

Center horizontally with mx-auto

Respect safe-area with pb-[calc(env(safe-area-inset-bottom,0)+1rem)]

Make content scrollable with max-h-[85vh] overflow-y-auto

Keep full-width chart inside the constrained panel

// inside MetricCard.tsx, replace the sheet JSX block
{open && (
  <div
    className="fixed inset-0 z-[60] bg-black/50"
    onClick={() => setOpen(false)}
    aria-modal
    role="dialog"
  >
    {/* Sheet container wrapper pinned to bottom */}
    <div className="absolute inset-x-0 bottom-0">
      {/* Constrained panel; centered; mobile-first */}
      <div
        className="mx-auto w-full max-w-[420px] sm:max-w-[480px]
                   rounded-t-2xl bg-[#101215] shadow-lg
                   px-4 pt-4 pb-[calc(env(safe-area-inset-bottom,0)+1rem)]
                   max-h-[85vh] overflow-y-auto"
        onClick={(e) => e.stopPropagation()}
      >
        {/* Header */}
        <div className="mb-3">
          <div className="text-white/90 text-lg font-semibold">{title}</div>
          <div className="text-white/60 text-sm">
            Current: {latest != null ? `${latest}${unit ?? ""}` : "--"}
          </div>
        </div>

        {/* Chart */}
        <div className="h-44 sm:h-48 mb-3">
          <ResponsiveContainer width="100%" height="100%">
            <LineChart data={series.map((d:any)=>({ x:d.date, y:d.value }))}>
              <XAxis dataKey="x" hide />
              <YAxis hide />
              <Tooltip formatter={(v)=> (v==null? "--": v)} />
              <Line
                type="monotone"
                dataKey="y"
                dot={false}
                stroke="currentColor"
                strokeWidth={2}
                className={colorClass || "text-blue-400"}
              />
            </LineChart>
          </ResponsiveContainer>
        </div>

        {/* Description */}
        <div className="text-white/80 text-sm leading-relaxed">
          {description}
        </div>

        {/* Close */}
        <button
          className="mt-4 h-11 w-full rounded-xl bg-white/10 text-white"
          onClick={() => setOpen(false)}
        >
          Close
        </button>
      </div>
    </div>
  </div>
)}


(Optional) Prevent body scroll while sheet is open
Add this small effect inside MetricCard (near where open is defined):

import { useEffect } from "react";

useEffect(() => {
  if (!open) return;
  const prev = document.body.style.overflow;
  document.body.style.overflow = "hidden";
  return () => { document.body.style.overflow = prev; };
}, [open]);


(Optional) Global helper for iOS safe-area fallback
If you prefer a class instead of inline calc, add to your global CSS:

/* globals.css */
.safe-bottom {
  padding-bottom: calc(env(safe-area-inset-bottom, 0) + 1rem);
}


…and replace pb-[calc(...)] with safe-bottom on the panel div.

Acceptance Criteria

On phones (≤430px wide), the sheet spans the screen but never overflows horizontally, with rounded top corners and proper padding.

On tablets/desktop, the sheet is centered and capped at ~420–480px width while the dimmed overlay fills the viewport.

Content is scrollable if it exceeds ~85% of viewport height; the chart resizes correctly.

The Close button is fully visible with safe-area padding (no overlap with the iOS home indicator).

Opening a sheet does not allow background scrolling (optional step achieves this).