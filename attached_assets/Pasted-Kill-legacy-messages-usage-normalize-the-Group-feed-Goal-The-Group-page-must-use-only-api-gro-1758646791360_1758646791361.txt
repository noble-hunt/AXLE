Kill legacy “messages” usage & normalize the Group feed

Goal: The Group page must use only /api/groups/:id/posts (or direct Supabase) and render safely even with mixed items.

Steps:

Search the repo for messages? and /messages and remove/replace any calls with the new posts API or direct Supabase:

Replace any fetch('/api/groups/:id/messages...') with fetch('/api/groups/:id/posts...').

If you find a direct Supabase call to a messages table, change to from('group_posts').

Create/ensure a single client helper:

// client/src/features/groups/api.ts
import { supabase } from '@/lib/supabaseClient';

export type GroupPost = {
  id: number;
  group_id: string;       // uuid
  author_id: string;      // uuid
  body: string;
  meta: any | null;
  created_at: string;     // ISO
};

export async function fetchGroupPosts(groupId: string, since?: string): Promise<GroupPost[]> {
  const token = (await supabase.auth.getSession()).data.session?.access_token;
  const qs = since ? `?since=${encodeURIComponent(since)}` : '';
  const res = await fetch(`/api/groups/${groupId}/posts${qs}`, {
    headers: { Authorization: `Bearer ${token ?? ''}` },
  });
  if (!res.ok) {
    console.error('[groups/posts] load failed', res.status, await res.text());
    throw new Error('Unable to fetch group feed');
  }
  const { posts } = await res.json();
  return posts as GroupPost[];
}


Harden the renderer (GroupFeed.tsx): no more new Date(post.created_at) directly. Use parseISO and guard.

// client/src/pages/groups/GroupFeed.tsx  (or wherever you map posts)
import { parseISO, formatDistanceToNow } from 'date-fns';
import type { GroupPost } from '@/features/groups/api';

function safeTimeAgo(iso?: string) {
  if (!iso) return '';
  try { return formatDistanceToNow(parseISO(iso), { addSuffix: true }); }
  catch { return ''; }
}

// When you render:
const renderPost = (post: GroupPost) => {
  const timeAgo = safeTimeAgo(post.created_at);
  // ...rest of card
};

// IMPORTANT: before map, filter for valid shape
const validPosts = posts.filter(p => typeof p?.created_at === 'string' && typeof p?.body === 'string');
return validPosts.map(renderPost);


This prevents “Invalid time value” from ever crashing the page—if a non-post sneaks in, it’s simply skipped.

Remove nudge/CTA items from the posts array. Those should render from their own component, not co-mingled in the same list typed as GroupPost. If you currently push a “nudge” object into posts, stop doing that and render it above the feed (your screenshot already has it isolated—keep it that way).

Done when: the feed renders (even empty), and there is no request to /messages?... in Network.