Restore “Start Now” and remove /suggest 404

Goal: Clicking Start Now creates/fetches today’s suggestion and navigates to /workout/:id. Also, the workout page’s top card mirrors the home card behavior.

Server: a single start endpoint

File: server/routes/workouts.suggest.ts

import { Router } from "express";
import { requireAuth } from "../middleware/auth";
import { Suggestion } from "../services/workouts/suggestion";

export const suggest = Router();

suggest.post("/start", requireAuth, async (req, res) => {
  const userId = req.user!.id;
  const { workoutId } = await Suggestion.ensureToday(userId); // upserts or creates one
  return res.json({ ok:true, workoutId });
});


Mount: app.use("/api/suggest", suggest);

Client: shared hook & navigation

File: client/src/features/workouts/suggest/api.ts

import { httpJSON } from "@/lib/http";
export async function startSuggestion() {
  const { workoutId } = await httpJSON("/api/suggest/start", { method:"POST" });
  return workoutId as string;
}


File: client/src/features/workouts/suggest/StartNowButton.tsx

import { useNavigate } from "react-router-dom";
import { startSuggestion } from "./api";
import { toast } from "@/components/ui/use-toast";
export function StartNowButton() {
  const nav = useNavigate();
  return (
    <button
      className="btn btn-primary w-full"
      onClick={async () => {
        try {
          const id = await startSuggestion();
          if (!id) throw new Error("No workout ID returned");
          nav(`/workout/${id}`);
        } catch (e:any) {
          toast({ title:"Could not start workout", description: e?.message ?? "Unknown error", variant:"destructive" });
        }
      }}
    >Start Now</button>
  );
}


Router: remove /suggest page and redirect

Add route alias if anything still links there:

<Route path="/suggest" element={<Navigate to="/workout" replace />} />


Acceptance

Home Start Now and Workouts page Start Now both create/fetch the daily suggestion and route to /workout/:id (no 404).

If suggestion already exists today, reuses it.