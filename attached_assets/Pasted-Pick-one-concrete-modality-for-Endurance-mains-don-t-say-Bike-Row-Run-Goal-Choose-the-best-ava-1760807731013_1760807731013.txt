Pick one concrete modality for Endurance mains (don’t say “Bike/Row/Run”)

Goal: Choose the best available cardio tool from the user’s equipment list so the main item is specific.

Edit the Endurance pack builder in server/ai/config/patternPackBuilders.ts – add a modality picker and use it.

// add near top of file
function pickCyclical(equipment:string[] = []): {name:string, patterns:string[]} {
  const eq = (equipment || []).map(e=>String(e).toLowerCase());
  if (eq.includes('rower'))     return { name: 'Row',        patterns: ['row','erg','cyclical'] };
  if (eq.includes('bike') || eq.includes('air_bike') || eq.includes('assault_bike'))
                               return { name: 'Bike',       patterns: ['bike','erg','cyclical'] };
  if (eq.includes('treadmill')) return { name: 'Run',        patterns: ['run','cyclical'] };
  if (eq.includes('ski_erg'))   return { name: 'Ski Erg',    patterns: ['ski','erg','cyclical'] };
  // fallback
  return { name: 'Jump Rope',   patterns: ['jump_rope','cyclical'] };
}

export function buildEndurancePack(totalMin: number, requestedIntensity = 6, equipment?: string[]): PatternPack {
  ...
  const mod = pickCyclical(equipment);

  if (isSteady) {
    mainBlocks.push({
      pattern: "Steady",
      minutes: budget,
      select: [{ categories: ["endurance","aerobic"], patterns: mod.patterns, items: 1 }],
      title: `Steady ${mod.name} Z2–Z3`,
    });
  } else if (isTempo) {
    mainBlocks.push({
      pattern: "CRUISE",
      minutes: budget,
      select: [{ categories: ["endurance","aerobic"], patterns: mod.patterns, items: 1 }],
      title: `Cruise Intervals ${mod.name} Z3–Z4`,
    });
  } else {
    mainBlocks.push({
      pattern: "VO2",
      minutes: budget,
      select: [{ categories: ["endurance","aerobic"], patterns: mod.patterns, items: 1 }],
      title: `VO2 Repeats ${mod.name} Z4–Z5`,
    });
  }

  return { ... };
}


Wire the equipment through when building the pack:

// premium.ts where pack is chosen for endurance
if (style === 'endurance') {
  pack = buildEndurancePack(request.duration_min || 45, request.intensity || 6, request.equipment || []);
}
