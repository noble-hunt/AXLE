“Fix workout generator 404 + route alias”

Goal: Visiting /workout-generate should load the workout generator page (canonical path /workout/generate). Remove the in-app 404 and ensure bottom-nav highlighting is correct.

Tasks

Find the router file (commonly client/src/App.tsx or client/src/routes.tsx) where <Routes> are defined.

Locate the generator page component. Search for one of:

GenerateWorkoutPage

WorkoutGenerate

file under client/src/pages/workout/* with “Generate” in the name

If it exists, note its import path and component name.
If it does not exist, create client/src/pages/workout/Generate.tsx as a thin wrapper that renders the existing generator UI components (category select, duration slider, intensity slider, “Generate Workout” button). Use the same page shell styles as other pages.

Add/normalize routes. In the router:

import { Routes, Route, Navigate } from "react-router-dom";
// import your generator page component
// import GenerateWorkoutPage from "@/pages/workout/Generate"; // adjust path/name

<Routes>
  {/* existing routes ... */}

  {/* Canonical generator path */}
  <Route path="/workout/generate" element={<GenerateWorkoutPage />} />

  {/* Legacy alias → redirect */}
  <Route path="/workout-generate" element={<Navigate to="/workout/generate" replace />} />

  {/* keep your 404 at the end */}
  {/* <Route path="*" element={<NotFound />} /> */}
</Routes>


Fix any links/buttons that navigate to the old slug.

Grep for "/workout-generate" and replace with "/workout/generate".

In components using anchors, switch to <Link to="/workout/generate"> or useNavigate().

Bottom nav active state. Ensure the tab highlighting logic treats any /workout/* path as “Workout” active:

const isWorkoutActive = location.pathname.startsWith("/workout");


Dev server & SPA fallback sanity.

Vite already has appType: 'spa'. Keep it.

If there is a custom Express preview server, ensure unmatched routes fall back to index.html (history API fallback). Example:

// server/dev or server/prod preview
import history from "connect-history-api-fallback";
app.use(history());


(If you already run Vite in middleware mode, this may be unnecessary—don’t duplicate.)

Optional: typed route helper.
Create client/src/lib/routes.ts:

export const RoutesMap = {
  workoutGenerate: "/workout/generate",
  workoutRoot: "/workout",
  // add others as needed
} as const;


Then replace string literals to reduce future drift.

Acceptance Criteria

Navigating to /workout-generate loads the generator (HTTP 200 inside the SPA; no in-app 404 card).

Navigating to /workout/generate loads the same page (canonical).

All internal buttons/links use /workout/generate.

Bottom nav highlights Workout on both paths.

Deep-linking works in dev and prod (no server 404; SPA fallback returns index.html).