App Store & PWA prep (assets, manifest, legal, iOS touch)

Goal
Make the web app “store-ready”: complete PWA manifest, icons/splash, iOS meta, service worker, and in-app legal routes.

Tasks

PWA manifest & icons

Ensure client/public/manifest.webmanifest includes:

name, short_name, description

display: "standalone", background_color, theme_color

A full icons array including 192x192, 256x256, 384x384, 512x512, maskable variants.

Ensure these icons exist in client/public/icons/ and are referenced in the manifest.

iOS meta

In client/index.html (or your HTML template), add:

<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
<link rel="apple-touch-icon" href="/icons/apple-touch-icon-180.png" />
<meta name="theme-color" content="#0B1220" />


Add iOS splash screens only if you already have them; otherwise skip (optional for MVP).

Service worker

Ensure Vite PWA (or your current SW) precaches core assets and is registered in the client entry. If not present, add Vite PWA plugin with conservative defaults (no aggressive offline caching of API calls yet).

Legal pages

Add routes/pages:

/legal/privacy

/legal/terms

Link them from the app’s “More → Legal” and from the public footer if you have one.

Use simple, clean content placeholders that we’ll refine later.

Sentry environment

Confirm that VITE_SENTRY_DSN_CLIENT and VITE_SENTRY_ENV are read in the client boot.

Confirm Express init reads SENTRY_DSN_SERVER and SENTRY_ENV so we see errors from both client & server.

App metadata

Confirm <title> and base Open Graph/Twitter meta tags exist for brand consistency.

Acceptance

Lighthouse PWA audit shows Installable; app can be added to home screen on iOS.

App icon looks correct on iOS home screen; dark status bar blends with app.

“Legal” links open real pages (no 404).

Manifest has maskable icon; icons load without 404s.

Sentry receives test events from both client and server when you trigger a sample error.